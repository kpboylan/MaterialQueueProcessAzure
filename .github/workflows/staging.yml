name: Deploy to Staging

on:
  push:
    branches:
      - master
      
env:
  ACR_NAME: netcoredockerreg
  IMAGE_NAME: materialqueueworker
  RESOURCE_GROUP: DefaultResourceGroup-WEU
  CONTAINER_NAME: materialqueueworker-aci
  LOCATION: westeurope

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          run: az acr login --name $ACR_NAME

      - name: Build Docker image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:latest -f MaterialQueueProcessAzure/Dockerfile MaterialQueueProcessAzure

      - name: Push image to ACR
        run: docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

      - name: Check if ACI Exists and Delete if Needed
        run: |
          echo "Checking for existing container instance..."
          set +e
          az container show --name $CONTAINER_NAME --resource-group $RESOURCE_GROUP > /dev/null 2>&1
          EXISTS=$?
          set -e
          if [ $EXISTS -eq 0 ]; then
            echo "Existing ACI found. Deleting it..."
            az container delete --name $CONTAINER_NAME --resource-group $RESOURCE_GROUP --yes --no-wait
            echo "Waiting for deletion to complete..."
            az container wait --deleted --name $CONTAINER_NAME --resource-group $RESOURCE_GROUP
          else
            echo "No existing ACI found."
          fi

      - name: Create new ACI for staging
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name $CONTAINER_NAME \
            --image $ACR_NAME.azurecr.io/$IMAGE_NAME:latest \
            --registry-login-server $ACR_NAME.azurecr.io \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --restart-policy Always \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --environment-variables \
              ConnectionStrings__ServiceBusConn='${{ secrets.SERVICEBUS_CONN }}' \
              ConnectionStrings__SqlConnString='${{ secrets.SQL_CONN }}'
