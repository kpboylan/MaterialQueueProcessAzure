name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy-prod:
    environment:
      name: production   # Requires approval if configured in GitHub > Settings > Environments
      url: https://portal.azure.com

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: materialqueueworker
      ACI_NAME: materialqueueworker-prod
      ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login $ACR_LOGIN_SERVER -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:prod -f MaterialQueueProcessAzure/Dockerfile MaterialQueueProcessAzure

      - name: Push image to ACR
        run: docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:prod

      - name: Delete old ACI (if exists)
        continue-on-error: true
        run: |
          az container delete --resource-group DefaultResourceGroup-WEU --name $ACI_NAME --yes

      - name: Create new ACI for production
        run: |
          az container create \
            --resource-group DefaultResourceGroup-WEU \
            --name $ACI_NAME \
            --image $ACR_LOGIN_SERVER/$IMAGE_NAME:prod \
            --registry-login-server $ACR_LOGIN_SERVER \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --restart-policy Always \
            --no-wait \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --environment-variables \
              ConnectionStrings__ServiceBusConn='${{ secrets.SERVICE_BUS_CONNECTION_STRING }}' \
              ConnectionStrings__SqlConnString='${{ secrets.SQL_CONNECTION_STRING }}'
